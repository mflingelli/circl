{
  "Modified": "2018-02-01T20:29:00.370000",
  "Published": "2018-02-01T20:29:00.370000",
  "capec": [
    {
      "id": "19",
      "name": "Embedding Scripts within Scripts",
      "prerequisites": "Target software must be able to execute scripts, and also allow attacker to write/upload script",
      "related_weakness": [
        "79",
        "276",
        "279",
        "284",
        "692",
        "697",
        "713",
        "71"
      ],
      "solutions": "Design: Use browser technologies that do not allow client side scripting.\nDesign: Utilize strict type, character, and encoding enforcement\nDesign: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.\nImplementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.\nImplementation: Perform input validation for all remote content.\nImplementation: Perform output validation for all remote content.\nImplementation: Disable scripting languages such as JavaScript in browser\nImplementation: Session tokens for specific host\nImplementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this.\nImplementation: Privileges are constrained, if a script is loaded, ensure system runs in chroot jail or other limited authority mode",
      "summary": "An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute scripts. The attacker leverages this capability to execute scripts to execute his/her own script by embedding it within other scripts that the target software is likely to execute. The attacker must have the ability to inject script into script that is likely to be executed. If this is done, then the attacker can potentially launch a variety of probes and attacks against the web server's local environment, in many cases the so-called DMZ, back end resources the web server can communicate with, and other hosts.\nWith the proliferation of intermediaries, such as Web App Firewalls, network devices, and even printers having JVMs and Web servers, there are many locales where an attacker can inject malicious scripts. Since this attack pattern defines scripts within scripts, there are likely privileges to execute said attack on the host.\nOf course, these attacks are not solely limited to the server side, client side scripts like Ajax and client side JavaScript can contain malicious scripts as well. In general all that is required is for there to be sufficient privileges to execute a script, but not protected against writing."
    },
    {
      "id": "474",
      "name": "Signature Spoofing by Key Theft",
      "prerequisites": "An authoritative or reputable signer is storing their private signature key with insufficient protection.",
      "related_weakness": [
        "284",
        "693",
        "216"
      ],
      "solutions": "Ensure all services are patched and up to date",
      "summary": "An attacker obtains an authoritative or reputable signer's private signature key by theft and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker."
    }
  ],
  "cvss": "7.5",
  "cwe": "CWE-284",
  "id": "CVE-2018-6521",
  "last-modified": "2018-03-03T21:29:04.067000",
  "nessus": [
    {
      "NASL family": "Debian Local Security Checks",
      "NASL id": "DEBIAN_DLA-1273.NASL",
      "description": "simplesamlphp, an authentication and federation application has been found vulnerable to Cross Site Scripting (XSS), signature validation byepass and using insecure connection charset.\n\nCVE-2017-18121\n\nA Cross Site Scripting (XSS) issue has been found in the consentAdmin module of SimpleSAMLphp through 1.14.15, allowing an attacker to manually craft links that a victim can open, executing arbitrary JavaScript code.\n\nCVE-2017-18122\n\nA signature-validation bypass issue was discovered in SimpleSAMLphp through 1.14.16. Service Provider using SAML 1.1 will regard as valid any unsigned SAML response containing more than one signed assertion, provided that the signature of at least one of the assertions is valid. Attributes contained in all the assertions received will be merged and the entityID of the first assertion received will be used, allowing an attacker to impersonate any user of any IdP given an assertion signed by the targeted IdP.\n\nCVE-2018-6521\n\nThe sqlauth module in SimpleSAMLphp before 1.15.2 relies on the MySQL utf8 charset, which truncates queries upon encountering four-byte characters. There might be a scenario in which this allows remote attackers to bypass intended access restrictions.\n\nFor Debian 7 'Wheezy', these problems have been fixed in version 1.9.2-1+deb7u2.\n\nWe recommend that you upgrade your simplesamlphp packages.\n\nNOTE: Tenable Network Security has extracted the preceding description block directly from the DLA security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
      "last seen": "2018-02-20",
      "modified": "2018-02-20",
      "plugin id": "106697",
      "published": "2018-02-09",
      "reporter": "Tenable",
      "source": "https://www.tenable.com/plugins/index.php?view=single&id=106697",
      "title": "Debian DLA-1273-1 : simplesamlphp security update"
    },
    {
      "NASL family": "Debian Local Security Checks",
      "NASL id": "DEBIAN_DSA-4127.NASL",
      "description": "Several vulnerabilities have been discovered in SimpleSAMLphp, a framework for authentication, primarily via the SAML protocol.\n\n  - CVE-2017-12867     Attackers with access to a secret token could extend its     validity period by manipulating the prepended time     offset.\n\n  - CVE-2017-12869     When using the multiauth module, attackers can bypass     authentication context restrictions and use any     authentication source defined in the config.\n\n  - CVE-2017-12873     Defensive measures have been taken to prevent the     administrator from misconfiguring persistent NameIDs to     avoid identifier clash. (Affects Debian 8 Jessie only.)\n\n  - CVE-2017-12874     The InfoCard module could accept incorrectly signed XML     messages in rare occasions.\n\n  - CVE-2017-18121     The consentAdmin module was vulnerable to a Cross-Site     Scripting attack, allowing an attacker to craft links     that could execute arbitrary JavaScript code in the     victim's browser.\n\n  - CVE-2017-18122     The (deprecated) SAML 1.1 implementation would regard as     valid any unsigned SAML response containing more than     one signed assertion, provided that the signature of at     least one of the assertions was valid, allowing an     attacker that could obtain a valid signed assertion from     an IdP to impersonate users from that IdP.\n\n  - CVE-2018-6519     Regular expression denial of service when parsing     extraordinarily long timestamps.\n\n  - CVE-2018-6521     Change sqlauth module MySQL charset from utf8 to utf8mb     to prevent theoretical query truncation that could allow     remote attackers to bypass intended access restrictions\n\n  - CVE-2018-7644     Critical signature validation vulnerability.",
      "last seen": "2018-03-06",
      "modified": "2018-03-05",
      "plugin id": "107119",
      "published": "2018-03-05",
      "reporter": "Tenable",
      "source": "https://www.tenable.com/plugins/index.php?view=single&id=107119",
      "title": "Debian DSA-4127-1 : simplesamlphp - security update"
    }
  ],
  "references": [
    "https://lists.debian.org/debian-lts-announce/2018/02/msg00008.html",
    "https://simplesamlphp.org/security/201801-03",
    "https://www.debian.org/security/2018/dsa-4127"
  ],
  "refmap": {
    "confirm": [
      "https://simplesamlphp.org/security/201801-03"
    ],
    "debian": [
      "DSA-4127"
    ],
    "mlist": [
      "[debian-lts-announce] 20180209 [SECURITY] [DLA 1273-1] simplesamlphp security update"
    ]
  },
  "summary": "The sqlauth module in SimpleSAMLphp before 1.15.2 relies on the MySQL utf8 charset, which truncates queries upon encountering four-byte characters. There might be a scenario in which this allows remote attackers to bypass intended access restrictions.",
  "vulnerable_configuration": [],
  "vulnerable_configuration_cpe_2_2": []
}